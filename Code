using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Linq;
class Solution {
    
    public struct suffix
        {
        public int index;
        public int[] rank;
        public suffix(int n)
            {
            index =0;
            rank = new int[n];
        }
    }
    
    static suffix[] SortSuffix(suffix[] unsorted)
        {
        //suffix[] sorted = new suffix[unsorted.Length];
        
        var sorted = 
            from s in unsorted
            orderby s.rank[0], s.rank[1]
            select s;
        
        return sorted.ToArray();
    }
    
    static suffix[] SuffixArray(string text)
        {
        int n = text.Length;
        suffix[] suffixArr = new suffix[n];
        
        // create suffix, assign index and ranks for first two char, and add to suffArr
        for(int i = 0;i<n;i++)
            {
            suffix s = new suffix(2);
            s.index = i;
            s.rank[0] = (int)text[i]- (int)'a';
            s.rank[1] = ((i+1<n)?((int)text[i+1]- (int)'a'):-1);
            suffixArr[i] = s;
        }
        
        //sort suffArr based on first two letters
        suffixArr = SortSuffix(suffixArr);
        
        int[] indArr = new int[n];
        //assign ranks for next 2x letters        
        for(int x = 4; x<2*n; x*=2)
            {
            //store previous first rank, make first rank of first suffix = 0
            int rank = 0;            
            int previousRank = suffixArr[0].rank[0];
            suffixArr[0].rank[0]=rank;
            indArr[suffixArr[0].index] = 0;
            
            //if both ranks are equal to previous ranks, then keep first rank the same, else increment by 1
            for(int i = 1; i<n;i++)
                {
                previousRank = suffixArr[i].rank[0];
                
                if(suffixArr[i].rank[0]==previousRank 
                   && suffixArr[i].rank[1]==suffixArr[i-1].rank[1])                    
                    suffixArr[i].rank[0] =rank;
                else
                    suffixArr[i].rank[0] =++rank;  
            
                indArr[suffixArr[i].index]=i;
            }
            
            //rank[1] = current rank of suffix[i+2]
            for(int i=0;i<n;i++)
                {
                int nextIndex = suffixArr[i].index +x/2;
                suffixArr[i].rank[2] = ((nextIndex<n)? (suffixArr[indArr[nextIndex]].rank[0]):-1);
            }
            
            suffixArr = SortSuffix(suffixArr);
        }
        
        return suffixArr;
    }
    static void Main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution */
        
        int n = Convert.ToInt32(Console.ReadLine());
        
        //process each pair
        for(int i=0;i<n;i++)
            {
            string a = Console.ReadLine();
            string b=Console.ReadLine();
            
            
        }
    }
}
